✅ STEP-BY-STEP DEMO FLOW
🔹 Step 1: Create S3 Bucket (1 min)
🧭 Go to:
AWS Console > S3 > Create bucket

📋 Options:
Bucket name: lambda-s3-demo-bucket

Region: Choose your region

Leave defaults

Click Create bucket

🗣️ Say this:

"This bucket will trigger our Lambda every time a file is uploaded."

🔹 Step 2: Create Lambda Function (2 mins)
🧭 Go to:
AWS Console > Lambda > Create Function

Choose: Author from scratch

📋 Options:
Name: S3TriggerFunction

Runtime: Python 3.12 (or Node.js, your choice)

Permissions: Create new role with basic Lambda permissions

Click Create Function

🧾 Add Code in Lambda Console
Click the code editor and paste:

python
Copy
Edit
def lambda_handler(event, context):
    bucket = event['Records'][0]['s3']['bucket']['name']
    key = event['Records'][0]['s3']['object']['key']
    print(f"File uploaded: {key} in bucket: {bucket}")
    return {
        'statusCode': 200,
        'body': f"File processed: {key}"
    }
Click Deploy.

🗣️ Say this:

"This function reads the uploaded file name from the event and logs it. S3 sends this event automatically."

🔹 Step 3: Add S3 Trigger to Lambda (2 mins)
🧭 Go to:
In Lambda, scroll down to Triggers

Click Add trigger

Choose S3

Bucket: Select lambda-s3-demo-bucket

Event type: PUT

Click Add

🗣️ Say this:

"We're linking our S3 bucket to this Lambda so every file upload (PUT event) will invoke it."

🔹 Step 4: Upload a File to S3 (1 min)
🧭 Go to:
S3 > lambda-s3-demo-bucket > Upload

Add a text/image file → Click Upload

🗣️ Say this:

"I'm uploading a file, and Lambda should instantly respond in the background."

🔹 Step 5: Check Logs in CloudWatch (2 mins)
🧭 Go to:
Lambda > Monitor > View logs in CloudWatch

Open the latest log stream

🔍 You’ll see:

Event details

Bucket and key name

Printed log from print(...) line

🗣️ Say this:

"This proves Lambda was triggered automatically by the S3 upload. No manual run needed — this is true event-driven architecture."

🔹 Step 6: Explain Real-World Use Case (4 mins)
🗣️ You Can Say:

✅ "Imagine a company that receives 100s of invoices daily. Each PDF is dropped into S3 by staff. Lambda can be set up to instantly extract data, send it to a database, notify a team via email — all automatically."

🧠 "This setup is 100% serverless. No EC2, no cron, no polling. You just upload → Lambda reacts → job done."

✅ Final Touch:
Tell them no server is running

You only pay per invocation

Works for real-time image resizing, antivirus scans, data pipelines, etc.

